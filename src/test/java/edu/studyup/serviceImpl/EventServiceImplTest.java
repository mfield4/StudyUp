package edu.studyup.serviceImpl;

import static org.junit.jupiter.api.Assertions.*;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import edu.studyup.entity.Event;
import edu.studyup.entity.Location;
import edu.studyup.entity.Student;
import edu.studyup.util.DataStorage;
import edu.studyup.util.StudyUpException;

/*
 *  3 total bugs to find, one in each of the following methods:
 *       updateEventName()
 *       getActiveEvents()
 *       addStudentToEvent()
 * */

class EventServiceImplTest {

    private EventServiceImpl eventServiceImpl;

    @BeforeAll
    static void setUpBeforeClass() throws Exception {
    }

    @AfterAll
    static void tearDownAfterClass() throws Exception {
    }

    @BeforeEach
    void setUp() throws Exception {
        eventServiceImpl = new EventServiceImpl();
        //Create Student
        Student student = new Student();
        student.setFirstName("John");
        student.setLastName("Doe");
        student.setEmail("JohnDoe@email.com");
        student.setId(1);

        //Create Event1
        Event event = new Event();
        event.setEventID(1);
        event.setDate(new Date());
        event.setName("Event 1");
        Location location = new Location(-122, 37);
        event.setLocation(location);
        List<Student> eventStudents = new ArrayList<>();
        eventStudents.add(student);
        event.setStudents(eventStudents);

        DataStorage.eventData.put(event.getEventID(), event);
    }

    @AfterEach
    void tearDown() throws Exception {
        DataStorage.eventData.clear();
    }

    @Test
    void testUpdateEventName_GoodCase() throws StudyUpException {
        int eventID = 1;
        eventServiceImpl.updateEventName(eventID, "Renamed Event 1");
        assertEquals("Renamed Event 1", DataStorage.eventData.get(eventID).getName());
    }

    @Test
    void testUpdateEvent_WrongEventID_badCase() {
        int eventID = 3;
        Assertions.assertThrows(StudyUpException.class, () -> {
            eventServiceImpl.updateEventName(eventID, "Renamed Event 3");
        });
    }

    /* Tests generated by IDE for each method in service impl. */

    @Test
    void updateEventName() throws StudyUpException {
        int eventID = 1;
        Event event = eventServiceImpl.updateEventName(eventID, "01234567890123456789");
        assertEquals("01234567890123456789", event.getName());
    }

    @Test
    void getActiveEvents() {
    }

    @Test
    void getPastEvents() {
    }

    @Test
    void addStudentToEvent() {
    }

    @Test
    void deleteEvent() {
    }

    /* TODO add 5 more test cases for the impl. */

}
